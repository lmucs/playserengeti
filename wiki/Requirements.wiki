     
  # A web application *shall* serve as a serengeti game server and administration portal.
    # Resources in the web application *should* deliver content in four forms
      # HTML for desktop and laptop browsers 
      # Minimal HTML for mobile web browsers
      # XML
      # JSON
    # The output format *shall* be uniquely determined by the uri
      # The server *should* produce JSON if the url ends in "/json"
      # The server *should* produce XML if the url ends in "/xml"
      # The server *should* produce simple HTML if the url server name begins with "m."
    # HTML resources *shall* validate as XTHML 1.1 Strict
    # The root url of the webapp *shall* map to a welcome screen displaying information about the application, a login area, and a registration area.
    # Each page of the webapp *shall* contain a header and a footer
      # The header *shall* contain a menu with the following options:
        # Navigating to the home page
        # Signing up (creating a new account)
        # Viewing and managing teams
        # Viewing and managing players
        # Viewing and managing locations
        # Logging in (if not already logged on) or logging out (if logged in)
        # Obtaining help
    # A player *shall* be able to manage his or her own account (profile):
      # A player *shall* be given the following options:
        # Deactivate his or her account
        # Modify the following attributes of the account:
          # Username
          # Home location
          # Contact information
          # Profile Picture
        # Invite other players to become friends
        # Remove friends
      # Players *shall* be given a search feature to find potential friends to invite
    # Users *shall* be able to manage teams
      # The user will be presented with three options:
        # Create Team
        # Modify Team
        # Delete Team
      # For the "Create Team" option:
        # The user will be able to select information about the team such as:
          # Team Name
          # Preferred Color (for the map overlay)
          # Team Picture
        # After the team is created, the user will be able to select people to invite to their team.
        # The creator of the team is automatically set as the team leader.
      # For the "Modify Team" option:
        # If the user will be presented with a list of teams to which they are a member.
        # The user, if they are the team leader, will be able to modify the team name, preferred color, team picture, and team home location.
        # If the user is the team leader, they may appoint another user to be the leader.
        # The user will be able to invite people to the team and, if they are the leader, remove people from the team.
      # The "Delete Team" option will remove the team from the database, as long as the user is the team leader.
    # For the "View World Map" option:
      # The user will be presented with a large map centered around their home location, search bars for both locations and people, and a text area at the bottom (this will initially be hidden).
      # The map will contain mechanisms to zoom in/out and to move in all directions.
      # The map will show a colored overlay to show which teams own which areas.
      # The map will show any friends and team members that are currently checked in as green circles.
      # The map will contain any locations that are controlled by the user, their teams, and any locations under contention with another team as squares.
      # Locations controlled by a user's group will be colored that of the teams color and locations under contention will be colored gray.
      # When a person or location is selected from the map, the text area will show information about that person/location.
      # The user may search for people and locations using the search bars.
      # When a search for a person or location is successful, the map will update to be centered around that person or location and the text area will show information about that person or location.
    # For the Location Management Option
      # The user will be presented with options to
        # Add a location/business 
        # Manage a location/business
        # Delete a location/business  
        # For the purposes of serengeti a business is a location that has additional information stored for it (i.e., proprietor) 
    # For the "Communicate" option
      # The user will be presented with options to: 
      # Invite to Game - a user can enter an email address and a message will be sent to that address inviting the recipient to sign up to Serengeti <wiki:comment>No longer relevant or to be implemented - REMOVE</wiki:comment>
      # Send friend request - invite a user to be added to a users friends list, allowing them to see each other's location <wiki:comment> Now part of profiles </wiki:comment>
      # Accept a friend request - allows a user to accept a friend request that has been received <wiki:comment> Now part of profiles </wiki:comment>
      # Invite to team - allows a user to invite another user to join a team <wiki:comment> Now part of profiles </wiki:comment>
      # Invite to Location - allows a user to invite another user to meet them at their current location. <wiki:comment>No longer relevant or to be implemented - REMOVE</wiki:comment>
  # A native iPhone app *shall* be delivered to allow checking in
      # When the user opens the application they are presented with a screen containing several button options.  This approach is used to ease initial loading time and to better separate a user's actions.  
      # The options that will be provided to the user are as follows:
        # Check In
        # Find People
        # Find Places
        # View World Map
        # Settings/Options
      # For the "Check In" option:
        # When selected, the application will record where the user is currently located.
        # When checking in, if the server detects that any of the user's friends and/or team members are checked in to the same location, a message is displayed stating that those people are in the same location. 
        # After the user has checked in, the user can select whether to automatically update their position or to check them out after a set period of time.
      # For the "Find People" option:
        # When selected, the user is presented with a new page that contains a search bar at the top, a map below it that includes a check box to "Show Territories (Regions?)", and a text area at the bottom (this will initially be hidden). 
        # The map will contain mechanisms to zoom in/out and to move in all directions.
        # The map shows an area of 10 miles in any direction centered around the current location of the user with the user represented as a blue circle.  
        # On the map, any friends or team members of the user that have recently checked in and are within the view area are represented as green circles.
        # When the "Show Territories (Regions?)" option is enabled, the map will display a colored overlay to represent which teams own which areas.  A key will be provided to differentiate regions.
        # Players can be searched for by first and/or last name or by username.
        # If a search is successful, the resulting users will be displayed in a scrolling list.
        # When the user selects one of the results the text area below the map will display that person's profile.
        # If the person searched for is currently checked in to a location, the map will update to show the location of that person.
        # If a search is unsuccessful, a message will appear which states that the person cannot be found.
      # For the Find Places option:
        # When "Find Places" is selected, the user is presented with a new page that contains a search bar at the top, a map below it that includes a check box to "Show Territories (Regions?)", and a text area at the bottom (this will initially be hidden).
        # The map will contain mechanisms to zoom in/out and to move in all directions.
        # The map shows an area of 10 miles in any direction centered around the current location of the user with the user represented as a blue circle. 
        # When the "Show Territories" option is enabled, the map will display a colored overlay to represent which teams own which areas.  A key will be provided to differentiate regions.
        # Locations can be searched by name.
        # If the search is successful, the results will be displayed in a scrolling list.
        # When a location is selected, the map is updated to show that location, represented as a square on the map and the text area below the map will display the location's profile.
      # For the View World Map option:
        # The user will be presented a screen with a map and a text area below it (this will initially be hidden).
        # The map will contain mechanisms to zoom in/out and to move in all directions.
        # The map will be centered around the user's current location.
        # The map will show a colored overlay to show which teams own which areas.
        # The map will show the locations of all friends and team members.
        # The map will show locations of interest that are near to the user, locations owned by the user's teams, and locations that are under contention.
        # When people/locations are selected from the map, the text area below the map will display that person or location's profile.
      # For the Settings/Options option:
        # //TODO
      # For the Location Management Option
        # The user will be presented with options to
          # Add a location/business 
          # Manage a location/business
          # Delete a location/business  
          # For the purposes of serengeti a business is a location that has additional information stored for it (i.e., proprietor)
  # The domain objects and their behavior *shall* be subject to the following rules
    # A player *shall* be identified by TODO
      # The email and password properties of a player are required.
      # A player can belong to zero or more teams
    # A team *shall* be identified by TODO
    # A location *shall* be identified by name, street address, GPS coordinates, and tags identifying the type of location. (i.e.: bar, bookstore, etc.)
      # A new location can be added only by a user with role TODO
      # Location data can be modified only by a user with role TODO
    # Players can check in to a location through either the web app or the iPhone app.
      # Location is derived from a search of existing locations based upon tags, address, or GPS coordinates. (GPS Coordinates found automatically on iPhone app.)
    # A player *shall* indicate, upon checkin, a team on whose behalf the checkin is made
      # Players *should* be provided a simple interface for selecting the team (e.g., a dropdown box)
    # A team's score is calculated based upon the total number of visits attributed to a team as well as the number of unique visitors on the team.
      # The score from an individual visit decays over a set period of time.
        # TODO - scoring decay requirements
    # A team *shall* be considered to be the owner of a location when TODO
    # A player *shall* be permitted to check into a location only when TODO