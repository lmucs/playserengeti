This page summarizes the activities for each class meeting, as well as informal meetings held outside class where problems were discussed or important architectural decisions were made.

== September 1 (Class) ==

  * Went over [http://www.cs.lmu.edu/~ray/classes/se/syllabus/ syllabus] in detail.
  * Talked a bit about craftsmanship vs. enginnering.
  * Mentioned Code Complete is an important book which needed to be read.
  * Mentioned Effective Java is also an important book to read.
  * Discussed some project ideas.
  * Want an app that runs on some server, with multiple interfaces (Web, JavaScript, Flash, iPhone, Java Mobile, thick client, ...).
  * Possible idea: a [http://playfoursquare.com/ Foursqure]-like application, possbily restricted to LMU. Possible codename: Serengeti.

== September 3 (Class) ==

  * Went over usefulness of McConell's text.
  * Looked at the requirements checklist.
  * Discussed waterfall vs. iterative.
  * Discussed ''staged delivery''.
  * Much brainstorming about the project.
  * Settled on name ''Serengeti''.
  * Discussed how to use the wiki at cs.lmu.edu.
  * Looked at augmented reality.
  * Came up with project summary.
  * Assigned readings from McConnell, Chapters 1, 33, 34, 2, 3, 4.
  * Asked students to all get wiki accounts.

== September 8 (Class) ==
  * Created the Use Cases.
  * Went over finer points of how the program will work (Check in/Check out as apposed to ping).
  * Checked our progress against the Requirements Checkl.ist in McConnell.
  * Decided we would connect to the server via html
  * Started the creation of the architecture page on the wiki.
  * Asked students to continue to update the wiki.

== September 10 (Class) ==

  * Lecture on Computing, Software Architecture and Development (with emphasis on the phases, workflows and iterations of modern software methods).
  * Lecture on the history and use of UML.
  * Lecture on the construction of large-scale Java applications, focusing both on project orientation and classpath/classloader issues.
  * Demonstration of the construction, from scratch, of a Java application using Maven .and Eclipse, and placing it into a new CVS module.  Unit testing was included in the demo as well.

== September 15 (Class) ==

  * Lecture on building Java webapps with Spring MVC and Maven.
  * Defined controllers, commands, services.
  * Discussed separation of web layer from service layer.
  * Showed how to create projects on Google Code.  Pointed out its SVN repo and wiki.
  * Made a calculator application (k41k) on Google Code.
  * Told students to do Homework 1 by next class.

== September 17 (Class) ==

  * Worked with students who were unable to get their own laptops set up.
  * Discovered Macs don't have Java SE 6 ready to run.
  * Pretty much a wasted day.  Was hoping everyone would be ready to work.  Oh well.
  * Two of the students were ready to go; they implemented a login page and refined project requirements.

== September 22 (Class) ==

  * Guest lecture: Andres Buritica on Postgres.

== September 24 (Class) ==

  * (Technical problems with the projection system shortened the class)
  * Lecture and demo on JSTL and JSP
    * Possibility of webapps with only JSP
    * Tag libraries
    * Demo using `core` and `functions` libraries 
    * Motivation for `c:out`
    * `c:choose`, `c:if`, `fn:length`
  * Pointers to more information about JSP
  
== September 29 (Class) ==

  * Announcement: Daily standups start next class
  * Reminder: Don't worry about databases yet.... Use mock data
  * Lecture on Spring
    * How Spring kind of saved Java
    * Dependency Injection, with motivating example
    * Singletons
    * Thread safety
    * Where to get information
  * Lecture on webapp architecture using Spring
    * Controller, command, validator, service, dao
    * In class demo of wiring
    * Purpose of Controller-Service separation
    * Purpose of Service-Dao separation
    * Dao interfaces and multiple implementations
  * How to write a good mock dao
    * Defensive copies
  * Demo of creating a new url, new controller, and new view
  * Review of JSTL, with more examples

== October 1 (Class) ==

== October 1 (Class) ==

== October 6 (Class) ==

== October 8 (Class) ==

== October 13 (Class) ==

== October 15 (Class) ==

== October 20 (Class) ==

== October 22 (Class) ==

== October 27 (Class) ==

== October 29 (Class) ==

== November 3 (Class) ==

== November 5 (Class) ==

== November 10 (Class) ==

== November 12 (Class) ==

== November 17 (Class) ==

== November 19 (Class) ==

== November 24 (Class) ==

== December 1 (Class) ==

== December 3 (Class) ==

== December 8 (Class) ==

== December 10 (Class) ==