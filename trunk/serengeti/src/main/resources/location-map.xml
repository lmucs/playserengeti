<!DOCTYPE sqlMap
   PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN"
   "http://www.ibatis.com/dtd/sql-map-2.dtd">
<sqlMap namespace="Location">

    <resultMap class="com.playserengeti.domain.Location" id="locationMap">
        <result property="id" column="location_id"/>
        <result property="name" column="location_name"/>
        <result property="latitude" column="location_latitude"/>
        <result property="longitude" column="location_longitude"/>
        <result property="street" column="location_street"/>
        <result property="city" column="location_city"/>
        <result property="state" column="location_state"/>
        <result property="zipcode" column="location_zipcode"/>
        <result property="phoneNumber" column="location_phone_number"/>
        <result property="owner" column="team_owner_id" select="getTeamById"/>
    </resultMap>
    
    <insert id="insertLocation">
	    INSERT
	    INTO location (
	       location_name,
	       location_latitude,
	       location_longitude,
	       location_street,
	       location_city,
	       location_state,
	       location_zipcode,
	       location_phone_number,
	       team_owner_id
	    )
	    VALUES (
	       #name#,
	       #latitude#,
	       #longitude#,
	       #street#,
	       #city#,
	       #state#,
	       #zipcode#,
	       #phoneNumber#,
	       #owner.id#
	    )
	    <selectKey keyProperty="id" resultClass="int">
	       SELECT currval('location_id_seq')
	    </selectKey>
    </insert>
    
    <update id="updateLocation">
        UPDATE location
        SET
            location_name = #name#,
            location_latitude = #latitude#,
            location_longitude = #longitude#,
            location_street = #street#,
            location_city = #city#,
            location_state = #state#,
            location_zipcode = #zipcode#,
            location_phone_number = #phoneNumber#,
            team_owner_id = #owner.id#
        WHERE location_id = #id#
    </update>
    
    <delete id="deleteLocation">
        DELETE FROM location
        WHERE location_id = #value#
    </delete>
    
    <select id="getLocationById" resultMap="locationMap">
        SELECT *
        FROM location
        WHERE location_id = #value#
    </select>
    
    <select id="getLocationByLatLngAndName" resultMap="locationMap">
        SELECT *
        FROM location
        WHERE location_name = #name# 
          AND location_latitude = CAST(#latitude# AS numeric)
          AND location_longitude = CAST(#longitude# AS numeric)
    </select>
    
    <select id="getAllLocations" resultMap="locationMap">
        SELECT *
        FROM location
    </select>
    
    <select id="getLocationByName" resultMap="locationMap">
        SELECT *
        FROM location
        WHERE location_name = #value#
    </select>
    
    <select id="getNearbyLocations" resultMap="locationMap">
        SELECT * 
        FROM location
        WHERE ABS(#latitude# - location_latitude) <![CDATA[ < ]]> 0.01666 
          AND ABS(#longitude# - location_longitude) <![CDATA[ < ]]> 0.01666
        ORDER BY ABS(#latitude# - location_latitude) <![CDATA[ < ]]> 0.01666, 
          ABS(#longitude# - location_longitude) <![CDATA[ < ]]> 0.01666
        LIMIT 20
    </select>
    
    <select id="getControlledTerritory" resultMap="locationMap">
        SELECT * 
        FROM location
        WHERE team_owner_id = #value#
    </select>
    
    <select id="searchLocations" resultMap="locationMap">
        SELECT *
        FROM location
        WHERE LOWER(location_name) LIKE '%' || LOWER(#value#) || '%'
          OR LOWER(location_street) LIKE '%' || LOWER(#value#) || '%'
        LIMIT 10
    </select>
    
    <update id="updateOwningTeam">
        UPDATE location
        SET team_owner_id = ( 
          SELECT visit_team_id
          FROM (
            SELECT visit_team_id, SUM(points) as total
            FROM (
              SELECT visit_team_id, (7 - (extract(day FROM now()) - extract(day FROM visit_timestamp))) as points
              FROM visit
              WHERE visit_location_id = #value#
                AND (extract(day FROM now()) - extract(day FROM visit_timestamp)) <![CDATA[ < ]]> 7
            ) getpoints
            GROUP BY visit_team_id
          ) gettotals
          ORDER BY total DESC
          LIMIT 1
        )
        WHERE location_id = #value#
          AND (team_owner_id IS NULL 
          OR team_owner_id != (
            SELECT visit_team_id
            FROM (
              SELECT visit_team_id, SUM(points) as total
              FROM (
                SELECT visit_team_id, (7 - (extract(day FROM now()) - extract(day FROM visit_timestamp))) as points
                FROM visit
                WHERE visit_location_id = #value#
                  AND (extract(day FROM now()) - extract(day FROM visit_timestamp)) <![CDATA[ < ]]> 7
              ) getpoints
              GROUP BY visit_team_id
            ) gettotals
            ORDER BY total DESC
            LIMIT 1
          ))
    </update>
</sqlMap>